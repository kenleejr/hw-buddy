# =============================================================================
# HW Buddy - Centralized Environment Configuration
# =============================================================================
# Copy this file to .env and fill in your actual values
# This single file configures all components: backend, web app, and mobile app

# =============================================================================
# Firebase Project Configuration
# =============================================================================
FIREBASE_PROJECT_ID=your-firebase-project-id
FIREBASE_AUTH_DOMAIN=your-project-id.firebaseapp.com
FIREBASE_STORAGE_BUCKET=your-project-id.appspot.com
FIREBASE_MESSAGING_SENDER_ID=your-sender-id

# =============================================================================
# Firebase API Keys (Platform Specific)
# =============================================================================
# Web App API Key
FIREBASE_WEB_API_KEY=your-web-api-key
FIREBASE_WEB_APP_ID=your-web-app-id

# Mobile API Key (Android/iOS) 
FIREBASE_MOBILE_API_KEY=your-mobile-api-key
FIREBASE_ANDROID_APP_ID=your-android-app-id
FIREBASE_IOS_APP_ID=your-ios-app-id

# =============================================================================
# Backend Configuration
# =============================================================================
# Path to Firebase service account key file (relative to backend/ directory)
GOOGLE_APPLICATION_CREDENTIALS=./service-account-key.json

# Backend Server Configuration
BACKEND_PORT=8000
BACKEND_HOST=0.0.0.0

# WebSocket Server Configuration  
WEBSOCKET_PORT=8081
WEBSOCKET_HOST=0.0.0.0

# =============================================================================
# AI/ML Configuration
# =============================================================================
# Gemini API Key for backend AI processing
GEMINI_API_KEY=your-gemini-api-key-here
GOOGLE_API_KEY=your-gemini-api-key-here

# Gemini Live API Configuration
MODEL_DEV_API=models/gemini-2.0-flash-exp
VOICE_DEV_API=Puck
MODEL_VERTEX_API=gemini-2.0-flash-exp
VOICE_VERTEX_API=Aoede

# Vertex AI Configuration (optional)
VERTEX_API=false
PROJECT_ID=your-project-id
VERTEX_LOCATION=us-central1

# W&B Configuration for telemetry (optional)
WANDB_PROJECT_ID=your-wandb-project
WANDB_API_KEY=your-wandb-api-key

# =============================================================================
# Development/Testing Configuration
# =============================================================================
# Environment (development, staging, production)
NODE_ENV=development

# CORS Origins for backend (comma-separated)
CORS_ORIGINS=http://localhost:3000,http://localhost:3001

# Frontend Configuration (for web app build)
NEXT_PUBLIC_WEBSOCKET_URL=ws://localhost:8081
NEXT_PUBLIC_BACKEND_URL=http://localhost:8000
NEXT_PUBLIC_GEMINI_API_KEY=your-gemini-api-key-here

# Logging Configuration
LOG_LEVEL=INFO

# =============================================================================
# Security Configuration
# =============================================================================
# Session timeout in seconds (default: 1 hour)
SESSION_TIMEOUT_SECONDS=3600

# Maximum concurrent sessions per IP (optional rate limiting)
MAX_SESSIONS_PER_IP=10

# =============================================================================
# Setup Instructions
# =============================================================================
# 1. Copy this file to .env in the root directory
# 2. Fill in your Firebase project details from Firebase Console
# 3. Get your Gemini API key from Google AI Studio
# 4. Place your Firebase service account key in backend/service-account-key.json
# 5. Update URLs for production deployment as needed
# 
# Note: This single .env file configures all components:
# - Backend server (Python FastAPI + WebSocket)
# - Web app (Next.js)
# - Mobile app (Flutter) - uses Firebase config values
#
# For production, update the NEXT_PUBLIC_* URLs to your deployed endpoints